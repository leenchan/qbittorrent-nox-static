name: enhanced edition

on:
  workflow_dispatch:

# on:
#   push:
#     branches:
#       - "*"
#   pull_request:
#     branches:
#       - "*"
#   release:
#     types:
#       - released

jobs:
  cross-compile:
    runs-on: ubuntu-latest
    timeout-minutes: 3000
    container: "alpine:latest"
    strategy:
      fail-fast: false
      matrix:
        # arm, aarch64, mips, mipsel, mips64, x86_64, win32
        build_target: [arm, aarch64, mips, mipsel, mips64, x86_64]
    name: "${{ matrix.build_target }}"
    env:
      QBITTORRENT_VERSION: "4.1.9.17"
      QBITTORRENT_ENHANCED: true
      UPX_COMPRESSION: false
      BUILD_TARGETS: "${{matrix.build_target}}"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: cross compile nox-static
        run: sh cross_build.sh
      - uses: actions/upload-artifact@v2
        with:
          name: qbittorrent-nox_${{ matrix.build_target }}_static
          path: |
            /tmp/qbittorrent-nox*
      - name: Upload Github Assets (Enhanced Edition)
        if: ${{ env.QBITTORRENT_ENHANCED == 'true' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: "qbittorrent-nox_${{ matrix.build_target }}_static.zip"
          tag: v${{ env.QBITTORRENT_VERSION }}-enhanced
          overwrite: true
      - name: Upload Github Assets
        if: ${{ env.QBITTORRENT_ENHANCED != 'true' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: "qbittorrent-nox_${{ matrix.build_target }}_static.zip"
          tag: v${{ env.QBITTORRENT_VERSION }}
          overwrite: true
