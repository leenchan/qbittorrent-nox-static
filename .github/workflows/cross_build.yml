name: Cross Build qBittorrent Static

on:
  workflow_dispatch:
    inputs:
      BUILD_TARGET:
        description: 'Arch Type (arm, aarch64, mips, mipsel, mips64, x86_64, x86_64_win)'
        default: ''

# on:
#   push:
#     branches:
#       - "*"
#   pull_request:
#     branches:
#       - "*"
#   release:
#     types:
#       - released

jobs:
  cross-compile:
    runs-on: ubuntu-latest
    timeout-minutes: 3000
    container: "alpine:latest"
    strategy:
      fail-fast: false
      matrix:
        # arm, aarch64, mips, mipsel, mips64, x86_64, x86_64_win
        build_target: [arm, aarch64, mips, mipsel, mips64, x86_64, x86_64_win]
    name: "${{ matrix.build_target }}"
    env:
#       QBITTORRENT_VERSION: "4.1.9.17"
      QBITTORRENT_VERSION: "4.3.8.10"
      QBITTORRENT_ENHANCED: true
      CHECK_BINARY: true
      UPX_COMPRESSION: true
      BUILD_TARGET: "${{matrix.build_target}}"
      BUILD_TARGET_INCLUDE: "${{github.event.inputs.BUILD_TARGET}}"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Init
        run: sh cross_build.sh init
      - name: Download
        run: sh cross_build.sh download
      - name: Compile zlib (1/8)
        run: sh cross_build.sh compile zlib
      - name: Compile openssl (2/8)
        run: sh cross_build.sh compile openssl
      - name: Compile boost (3/8)
        run: sh cross_build.sh compile boost
      - name: Compile qtbase (4/8)
        run: sh cross_build.sh compile qtbase
      - name: Compile qttools (5/8)
        run: sh cross_build.sh compile qttools
      - name: Compile libiconv (6/8)
        run: sh cross_build.sh compile libiconv
      - name: Compile libtorrent (7/8)
        run: sh cross_build.sh compile libtorrent
      - name: Compile qbittorrent (8/8)
        run: sh cross_build.sh compile qbittorrent
      - name: Check
        if: ${{ env.CHECK_BINARY == 'true' }}
        run: sh cross_build.sh check
      - name: Compress with UPX
        if: ${{ env.UPX_COMPRESSION == 'true' }}
        run: sh cross_build.sh compress
      - name: Archive
        run: sh cross_build.sh archive
      - uses: actions/upload-artifact@v2
        with:
          name: qbittorrent-nox_${{ matrix.build_target }}_static
          path: |
            /tmp/qbittorrent-nox*
      - name: Upload Github Assets (Enhanced Edition)
        if: ${{ env.QBITTORRENT_ENHANCED == 'true' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: "qbittorrent-nox_${{ matrix.build_target }}_static.zip"
          tag: v${{ env.QBITTORRENT_VERSION }}-enhanced
          overwrite: true
      - name: Upload Github Assets
        if: ${{ env.QBITTORRENT_ENHANCED != 'true' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: "qbittorrent-nox_${{ matrix.build_target }}_static.zip"
          tag: v${{ env.QBITTORRENT_VERSION }}
          overwrite: true
